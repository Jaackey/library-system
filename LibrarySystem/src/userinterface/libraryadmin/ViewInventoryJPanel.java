/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.libraryadmin;

import business.account.AccountItem;
import business.book.Book;
import business.library.Library;
import business.runnable.BookLentRunnable;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jackey
 */
public class ViewInventoryJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Library library;
    
    /**
     * Creates new form ViewInventoryJPanel
     */
    public ViewInventoryJPanel() {
        initComponents();
    }

    public ViewInventoryJPanel(JPanel userProcessContainer, Library library) {
        this.userProcessContainer = userProcessContainer;
        this.library = library;
        initComponents();
        populateAll();
    }

    public void populateAll(){
        DefaultTableModel model = (DefaultTableModel) bookTable.getModel();       
        model.setRowCount(0);
        for(Book book : library.getBookCatalog().getBookList()){
            Object[] row = new Object[6];
            row[0] = book;
            row[1] = book.getAuthor();
            row[2] = book.getPress();
            row[3] = book.getDate();
            row[4] = book.getInprice();
            row[5] = book.getAmount();
            model.addRow(row);
        }
    }
    
    public void populateShort(){
        DefaultTableModel model = (DefaultTableModel) bookTable.getModel();       
        model.setRowCount(0);
        for(Book book : library.getBookCatalog().getBookList()){
            if(book.getAmount() <= 3){
                Object[] row = new Object[6];
                row[0] = book;
                row[1] = book.getAuthor();
                row[2] = book.getPress();
                row[3] = book.getDate();
                row[4] = book.getInprice();
                row[5] = book.getAmount();
                model.addRow(row);
            }
        }
    }
    
    public void addRefillToAccount(Book book, int num){
        AccountItem ai = library.getLibraryAccount().createAccountItem(AccountItem.Type.Spent);
        double total = book.getInprice() * num;
        ai.setMoney(total);
        ai.setDate(new Date());
        ai.setExplain(book.getName());
        ai.setReceiver(String.valueOf(num));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        buySpinner = new javax.swing.JSpinner();
        refillBtn = new javax.swing.JButton();
        showTBtn = new javax.swing.JToggleButton();
        backBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("View Library Inventory");

        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Name", "Author", "Press", "PublishDate", "Purchase Price", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bookTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(bookTable);

        jLabel2.setText("Amount:");

        refillBtn.setText("Refill Book");
        refillBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refillBtnActionPerformed(evt);
            }
        });

        showTBtn.setText("Show Short/All Inventory");
        showTBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTBtnActionPerformed(evt);
            }
        });

        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backBtn)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(showTBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(buySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(refillBtn))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(251, 251, 251))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(buySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refillBtn)
                    .addComponent(showTBtn))
                .addGap(18, 18, 18)
                .addComponent(backBtn)
                .addContainerGap(92, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void showTBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTBtnActionPerformed
        // TODO add your handling code here:
        if(showTBtn.isSelected()){
            populateShort();
        }
        else{
            populateAll();
        }
    }//GEN-LAST:event_showTBtnActionPerformed

    private void refillBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refillBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = bookTable.getSelectedRow();
        if(selectedRow >= 0){
            int buyNum = (Integer)buySpinner.getValue();
            if(buyNum == 0){
                JOptionPane.showMessageDialog(null, "Please Purchase More Than Zero!");
                return;
            }
            else{
                Book book = (Book)bookTable.getValueAt(selectedRow, 0);
                book.setAmount(book.getAmount() + buyNum);
                addRefillToAccount(book, buyNum);
                if(showTBtn.isSelected()){
                    populateShort();
                }
                else{
                    populateAll();
                }
                JOptionPane.showMessageDialog(null, "Success!");
                BookLentRunnable blr = new BookLentRunnable(library, book.getName(), book.getAmount());
                Thread t1 = new Thread(blr);
                t1.start();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "No Book Selected");
            return;
        }
    }//GEN-LAST:event_refillBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTable bookTable;
    private javax.swing.JSpinner buySpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refillBtn;
    private javax.swing.JToggleButton showTBtn;
    // End of variables declaration//GEN-END:variables
}
