/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.bookadmin;

import business.library.Library;
import business.record.RecordItem;
import business.runnable.BookLentRunnable;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jackey
 */
public class ViewRecordJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Library library;
    /**
     * Creates new form ViewRecordJPanel
     */
    public ViewRecordJPanel() {
        initComponents();
    }

    public ViewRecordJPanel(JPanel userProcessContainer, Library library) {
        this.userProcessContainer = userProcessContainer;
        this.library = library;
        initComponents();
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) recordTable.getModel();       
        model.setRowCount(0);
        for(RecordItem ri : library.getLentRecord().getRecordList()){
                Object[] row = new Object[7];
                row[0] = ri.getUserAccount().getUsername();
                row[1] = ri.getUserAccount().getPerson();
                row[2] = ri.getBook();
                row[3] = ri.getLentDate();
                row[4] = ri.getExpDate();
                row[5] = ri.getBook().getInprice();
                row[6] = ri;
                model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        recordTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        returnBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("View Library Lent Record");

        recordTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reader Account", "Person", "BookName", "Lent Date", "ExpDate", "Price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        recordTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(recordTable);

        jLabel2.setText("Reader User Account:");

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        returnBtn.setText("Book Returned");
        returnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBtnActionPerformed(evt);
            }
        });

        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backBtn)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(searchBtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(returnBtn))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn)
                    .addComponent(returnBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(backBtn)
                .addGap(38, 38, 38))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) recordTable.getModel();       
        model.setRowCount(0);
        for(RecordItem ri : library.getLentRecord().getRecordList()){
            int a = ri.getUserAccount().getUsername().indexOf(nameText.getText());
            if(a >= 0){
                Object[] row = new Object[7];
                row[0] = ri.getUserAccount().getUsername();
                row[1] = ri.getUserAccount().getPerson();
                row[2] = ri.getBook();
                row[3] = ri.getLentDate();
                row[4] = ri.getExpDate();
                row[5] = ri.getBook().getInprice();
                row[6] = ri;
                model.addRow(row);
            }
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void returnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = recordTable.getSelectedRow();
        if(selectedRow >= 0){
            RecordItem ri = (RecordItem)recordTable.getValueAt(selectedRow, 6);
            if(ri.getStatus().equals("Returned")){
                JOptionPane.showMessageDialog(null, "Book Has been Returned!");
                return;
            }
            ri.setStatus("Returned");
            ri.getBook().setAmount(ri.getBook().getAmount() + 1);
            populateTable();
            Date now = new Date();
            if(now.getTime() > ri.getExpDate().getTime()){
                System.out.println("-----Out of Exp Time");
                if(ri.getUserAccount().getPerson().getCredit() >= 10){
                    ri.getUserAccount().getPerson().setCredit(ri.getUserAccount().getPerson().getCredit() - 10);
                }
            }
            else{
                System.out.println("-----Increase Credit");
                if(ri.getUserAccount().getPerson().isIsVip()){
                    ri.getUserAccount().getPerson().setCredit(ri.getUserAccount().getPerson().getCredit() + 20);
                }
                else{
                    ri.getUserAccount().getPerson().setCredit(ri.getUserAccount().getPerson().getCredit() + 10);
                }
            }
            BookLentRunnable blr = new BookLentRunnable(library, ri.getBook().getName(), ri.getBook().getAmount());
            Thread t1 = new Thread(blr);
            t1.start();
        }
        else{
            JOptionPane.showMessageDialog(null, "No Record Selected");
            return;
        }
    }//GEN-LAST:event_returnBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        BookAdminJPanel sajp = (BookAdminJPanel) component;
        sajp.populateTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameText;
    private javax.swing.JTable recordTable;
    private javax.swing.JButton returnBtn;
    private javax.swing.JButton searchBtn;
    // End of variables declaration//GEN-END:variables
}
